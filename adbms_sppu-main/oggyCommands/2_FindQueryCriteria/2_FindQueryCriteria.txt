# Step 1: Start MongoDB server (if not already running)
sudo systemctl start mongod

# Step 2: Access the MongoDB shell
mongo

# Step 3: Create a database named 'studentDB'
use studentDB

# Step 4: Create a collection named 'students'
db.createCollection("students")

# Step 5: Insert multiple student documents into the 'students' collection
db.students.insertMany([
    { "name": "Vivek", "age": 20, "department": "IT", "subjects": ["Math", "Physics"], "graduated": null },
    { "name": "Geetesh", "age": 21, "department": "CS", "subjects": ["Chemistry", "Biology"], "graduated": false },
    { "name": "Harsh", "age": 22, "department": "IT", "subjects": ["Math", "English"], "graduated": true },
    { "name": "Amit", "age": 19, "department": "IT", "subjects": ["Physics", "English"], "graduated": false },
    { "name": "Priya", "age": 20, "department": "CS", "subjects": ["Math", "Chemistry"], "graduated": true }
])

# View the documents in 'students' collection
db.students.find()

# a) Find and findOne operations
db.students.find({ "name": "Vivek" })
db.students.findOne({ "department": "CS" })


db.students.find()

# b) Query Criteria - Query conditionals
db.students.find({ "age": { $gt: 20 } }) # Find students with age greater than 20
db.students.find({ "age": { $lte: 20 } }) # Find students with age less than or equal to 20


db.students.find()

# OR query
db.students.find({ $or: [{ "department": "IT" }, { "graduated": true }] })


db.students.find()

# $not query
db.students.find({ "age": { $not: { $eq: 20 } } }) # Find students whose age is not 20


db.students.find()

# Null query
db.students.find({ "graduated": null }) # Find students with null graduation status


db.students.find()

# Regular expression query
db.students.find({ "name": { $regex: "^H" } }) # Find students whose names start with 'H'


db.students.find()

# Querying arrays
db.students.find({ "subjects": "Math" }) # Find students who have 'Math' in their subjects


db.students.find()

# Type-specific query
db.students.find({ "graduated": { $type: "bool" } }) # Find students with boolean 'graduated' field


db.students.find()
